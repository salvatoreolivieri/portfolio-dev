{"version":3,"file":"Markdown.c8386393.js","sources":["../../../../components/Utility/Markdown.vue"],"sourcesContent":["<script>\nexport default defineComponent({\n  props: {\n    content: {\n      type: String,\n      required: true,\n    },\n\n    inline: { type: Boolean, required: false, default: true },\n\n    tag: { type: String, required: false, default: \"p\" },\n  },\n\n  setup(props) {\n    const { $markdown } = useNuxtApp()\n    // renderInline() removes the <p> tag\n    const markdownContent = computed(() =>\n      props.inline\n        ? $markdown && $markdown.renderInline(props.content)\n        : $markdown && $markdown.render(props.content)\n    )\n\n    const renderedTag = computed(() => (!props.inline ? \"div\" : props.tag))\n\n    return () =>\n      h(renderedTag.value, {\n        class: props.inline\n          ? \"utils-markdown\"\n          : \"utils-markdown whitespace-pre-line\",\n        innerHTML: markdownContent.value,\n      })\n  },\n})\n</script>\n"],"names":[],"mappings":";;;AACA,MAAA,YAAA,gBAAA;AAAA,EACE,OAAA;AAAA,IACE,SAAA;AAAA;;;;IAOA,KAAA,EAAA,MAAA,QAAA,UAAA,OAAA,SAAA,IAAA;AAAA;;;AAMA,UAAA,kBAAA;AAAA,MAAA,0EAGI,aAAA,UAAA,OAAA,MAAA,OAAA;AAAA,IACJ;;AAIA,WAAA,MACE,EAAA,YAAA,OAAA;AAAA,MACE,OAAA,MAAA,SACE,mBACA;AAAA,MACF,WAAA,gBAAA;AAAA;;AAGR,CAAA;;;;;;;"}